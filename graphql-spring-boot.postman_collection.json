{
	"info": {
		"_postman_id": "8d829566-9619-40a9-9c2b-4b5da1086955",
		"name": "spring-boot-cloud",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "user/create",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\r\n  create(data: {name: \"olivan\", cpf: \"1\"}) {\r\n    id,\r\n    name\r\n  }\r\n}",
						"variables": ""
					},
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8081/graphql",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "user/list",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "{\r\n  users {\r\n    id,\r\n    name,\r\n    cpf\r\n  }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "localhost:8081/graphql",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "user/findByCpf",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "{\r\n  user(cpf: \"1\") {\r\n    id,\r\n    name\r\n  }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "localhost:8081/graphql",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "fetch/schema",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {  \r\n  __schema {    \r\n    queryType {      \r\n      fields {        \r\n        name        \r\n        description        \r\n        args {          \r\n          name          \r\n          description          \r\n          type{\r\n            name\r\n            \r\n          }    \r\n        }        \r\n        type{\r\n          kind\r\n          name\r\n          description\r\n        }\r\n      }    \r\n    }\r\n    types {      \r\n      name      \r\n      description      \r\n      fields {        \r\n        name        \r\n        description        \r\n        type {          \r\n          name\r\n          description\r\n        }      \r\n      }    \r\n    }  \r\n  }\r\n} ",
						"variables": ""
					}
				},
				"url": {
					"raw": "localhost:8081/graphql",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "fetch/types",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {  \r\n  __schema {    \r\n    types {      \r\n      name      \r\n      description      \r\n      fields {        \r\n        name        \r\n        description \r\n        args {  \r\n          name          \r\n          description          \r\n          type{\r\n            kind\r\n            name\r\n         \tofType {\r\n              kind\r\n              name\r\n            }\r\n          }    \r\n        }\r\n        type {  \r\n          kind\r\n          name\r\n          description\r\n          ofType {\r\n            kind\r\n            name\r\n          }\r\n        }      \r\n      }    \r\n    }  \r\n  }\r\n} ",
						"variables": ""
					}
				},
				"url": {
					"raw": "localhost:8081/graphql",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "catalog/list",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8010/products",
					"host": [
						"localhost"
					],
					"port": "8010",
					"path": [
						"products"
					]
				}
			},
			"response": []
		}
	]
}